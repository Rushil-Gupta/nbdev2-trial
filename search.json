[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "nbdev2_cards",
    "section": "",
    "text": "This file will become your README and also the index of your documentation."
  },
  {
    "objectID": "index.html#install",
    "href": "index.html#install",
    "title": "nbdev2_cards",
    "section": "Install",
    "text": "Install\nInstall using:\n   pip install nbdev2-trial\nor:\n   conda install -c fastai nbdev2-trial"
  },
  {
    "objectID": "index.html#how-to-use",
    "href": "index.html#how-to-use",
    "title": "nbdev2_cards",
    "section": "How to use",
    "text": "How to use\nThis lib provides a Card class that you can use to do stuff with playing cards\n\n# Card(1,3)\n\nSuits are numbered according to this list:\n\n# suits"
  },
  {
    "objectID": "card.html",
    "href": "card.html",
    "title": "card – A basic playing card",
    "section": "",
    "text": "We will be using numbers to represent playing cards suits and ranks. These are the suits:\nThese are the ranks:\nsource"
  },
  {
    "objectID": "card.html#comparison-operators",
    "href": "card.html#comparison-operators",
    "title": "card – A basic playing card",
    "section": "Comparison Operators",
    "text": "Comparison Operators\n\ntest_eq(Card(suit = 1, rank = 3),Card(suit = 1, rank = 3))\n\n\nassert Card(suit = 1, rank = 3) < Card(suit = 2, rank = 6)\n\n\nassert Card(suit = 2, rank = 3) > Card(suit = 1, rank = 3)"
  },
  {
    "objectID": "deck.html",
    "href": "deck.html",
    "title": "deck",
    "section": "",
    "text": "source\n\nDeck\n\n Deck ()\n\nA deck of 52 cards not including jokers\nWhen we initially create a deck, all the cards will be present\n\ndeck = Deck()\ndeck\n\nA of spade; 2 of spade; 3 of spade; 4 of spade; 5 of spade; 6 of spade; 7 of spade; 8 of spade; 9 of spade; 10 of spade; J of spade; Q of spade; K of spade; A of hearts; 2 of hearts; 3 of hearts; 4 of hearts; 5 of hearts; 6 of hearts; 7 of hearts; 8 of hearts; 9 of hearts; 10 of hearts; J of hearts; Q of hearts; K of hearts; A of clubs; 2 of clubs; 3 of clubs; 4 of clubs; 5 of clubs; 6 of clubs; 7 of clubs; 8 of clubs; 9 of clubs; 10 of clubs; J of clubs; Q of clubs; K of clubs; A of diamond; 2 of diamond; 3 of diamond; 4 of diamond; 5 of diamond; 6 of diamond; 7 of diamond; 8 of diamond; 9 of diamond; 10 of diamond; J of diamond; Q of diamond; K of diamond\n\n\nThat is 52 cards\n\ntest_eq(len(deck),52)\n\n\nsource\n\n\nDeck.pop\n\n Deck.pop (idx:int=-1)\n\nRemove one card from the deck\n\n\n\n\n\n\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\nidx\nint\n-1\nThe index of the card to remove, defaulting to the last one\n\n\n\n\ndeck = Deck()\ntest_eq(deck.pop(), Card(3,13))"
  }
]